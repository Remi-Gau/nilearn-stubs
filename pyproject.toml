[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [{name = "Rémi Gau"}]
dependencies = [
    "nilearn[plotting]>=0.11.1",
]
description = "Type stubs for Nilearn"
# Version from setuptools_scm
dynamic = ["version"]
license = {text = "new BSD"}
maintainers = [{name = "Rémi Gau", email = "remi.gau@inria.fr"}]
name = "nilearn_types"
requires-python = ">=3.9"

[tool.hatch.build.hooks.vcs]
version-file = "nilearn/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["nilearn_types"]

[tool.hatch.version]
source = "vcs"


[tool.ruff]
extend-exclude = [
    "nilearn/externals/*",
]
include = ["pyproject.toml", "nilearn/**/*.pyi"]
indent-width = 4
line-length = 79

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [
    "ARG005",
    "B904",
    "D105",
    "D205",
    "D208",
    "D301",
    "E741",
    "ERA001",
    "FURB105",
    "N803",
    "N806",
    "PERF203",
    "PIE790",
    "PLR2004",
    "PTH207",
    "UP038",  # https://github.com/astral-sh/ruff/issues/7871
    # Avoid linter rules conflicting with the formatter
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "COM812",
    "COM819",
    "D206",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191"
]
# List of all the ruff rules (includes why the rule matters)
# https://docs.astral.sh/ruff/rules/
select = [
    "ARG",
    "B",
    "C4",
    "C90",
    "D",
    "E",
    "ERA",
    "F",
    "FLY",
    "FURB",
    "I",
    "N",
    "NPY",
    "PERF",
    "PIE",
    "PTH",
    "PD",
    "PGH",
    "PLR",
    "RUF",
    "SIM",
    "UP",
    "W"
]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.ruff.lint.per-file-ignores]
"**/{doc}/*" = ["D103"]
"**/{examples}/*" = ["B018", "D103", "D400", "E402"]
"**/{tests}/**/test_*" = ["D100", "D103", "E402"]
"__init__.py" = ["D104", "E402"]
"nilearn/signal.py" = ["B028"]
"nilearn/{_utils}/*" = ["B028"]
"nilearn/{connectome}/*" = ["B028"]
"nilearn/{datasets}/*" = ["B028"]
"nilearn/{decoding}/*" = ["B028"]
"nilearn/{glm}/*" = ["B028"]
"nilearn/{image}/*" = ["B028"]
"nilearn/{maskers}/*" = ["B028"]
"nilearn/{mass_univariate}/*" = ["B028"]
"nilearn/{plotting}/*" = ["B028"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"


