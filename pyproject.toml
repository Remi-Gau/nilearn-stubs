[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [{name = "Rémi Gau"}]
dependencies = [
    "nilearn@{root:uri}/nilearn/"
]
description = "Type stubs for Nilearn"
# Version from setuptools_scm
dynamic = ["version"]
license = {text = "new BSD"}
maintainers = [{name = "Rémi Gau", email = "remi.gau@inria.fr"}]
name = "nilearn-stubs"
requires-python = ">=3.9"

[project.optional-dependencies]
# A combination of dependencies useful for developers
dev = [
    "mypy",
    "monkeytype",
    "numpy",
    "nibabel",
    "requests",
    "pandas-stubs",
    "lxml-stubs",
    "types-requests",
    "rich",
    "coverage",
    "pytest>=6.0.0",
    "pytest-cov",
    "pytest-randomly",
    "pytest-reporter-html1>=0.9.2",
    "pytest-csv",
    "pytest-timeout"
]

[tool.hatch.build.hooks.vcs]
version-file = "nilearn-stubs/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["nilearn-stubs"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"

[tool.mypy]
allow_redefinition = false
# Miscellaneous strictness flags
allow_untyped_globals = false
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_explicit = false  # TODO
disallow_any_expr = true
disallow_any_generics = false  # TODO
# Disallow dynamic typing
disallow_any_unimported = false  # TODO
disallow_incomplete_defs = false  # TODO
disallow_subclassing_any = true
# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = false  # TODO
enable_error_code = "ignore-without-code"  # same as in pandas
exclude = [
    "env/.*"
]
explicit_package_bases = false
follow_imports = "normal"
follow_imports_for_stubs = true
# Suppressing errors
ignore_errors = false
ignore_missing_imports = false
implicit_reexport = false
local_partial_types = false
# Import discovery
namespace_packages = false
# None and Optional handling
no_implicit_optional = true
no_silence_site_packages = false
no_site_packages = false
plugins = [
    "numpy.typing.mypy_plugin"
]
show_column_numbers = false
show_error_codes = true
# Configuring error messages
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
# Configuring warnings
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "IPython.*",
    "joblib.*",
    "kaleido",
    "matplotlib.*",
    "memory_profiler.*",
    "mpl_toolkits.*",
    "nibabel.*",
    "nilearn._version",
    "packaging.*",
    "plotly.*",
    "pytest.*",
    "rich.*",
    "scipy.*",
    "sklearn.*",
    "statsmodels.*",
    "svg.*"
]

[tool.ruff]
extend-exclude = [
    "nilearn/externals/*"
]
include = ["pyproject.toml", "nilearn/**/*.pyi"]
indent-width = 4
line-length = 120

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [
    "D",
    "N802",
    "N803",
    "N999"
]
# List of all the ruff rules (includes why the rule matters)
# https://docs.astral.sh/ruff/rules/
select = [
    "ARG",
    "B",
    "C4",
    "C90",
    "D",
    "E",
    "ERA",
    "F",
    "FLY",
    "FURB",
    "I",
    "N",
    "NPY",
    "PERF",
    "PIE",
    "PTH",
    "PD",
    "PGH",
    "PLR",
    "RUF",
    "SIM",
    "UP",
    "W"
]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-args
max-args = 26
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-returns
max-returns = 7
