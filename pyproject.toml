[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [{name = "Rémi Gau"}]
dependencies = [
    "nilearn[plotting]>=0.11.1"
]
description = "Type stubs for Nilearn"
# Version from setuptools_scm
dynamic = ["version"]
license = {text = "new BSD"}
maintainers = [{name = "Rémi Gau", email = "remi.gau@inria.fr"}]
name = "nilearn_types"
requires-python = ">=3.9"

[project.optional-dependencies]
# A combination of dependencies useful for developers
dev = [
    "nilearn_types",
    "mypy",
    "pre-commit"
]

[tool.hatch.build.hooks.vcs]
version-file = "nilearn/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["nilearn_types"]

[tool.hatch.version]
source = "vcs"

[tool.mypy]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "joblib.memory"
]

[tool.ruff]
extend-exclude = [
    "nilearn/externals/*"
]
include = ["pyproject.toml", "nilearn/**/*.pyi"]
indent-width = 4
line-length = 79

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [
    "N803"
]
# List of all the ruff rules (includes why the rule matters)
# https://docs.astral.sh/ruff/rules/
select = [
    "ARG",
    "B",
    "C4",
    "C90",
    "D",
    "E",
    "ERA",
    "F",
    "FLY",
    "FURB",
    "I",
    "N",
    "NPY",
    "PERF",
    "PIE",
    "PTH",
    "PD",
    "PGH",
    "PLR",
    "RUF",
    "SIM",
    "UP",
    "W"
]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-args
max-args = 26
# https://docs.astral.sh/ruff/settings/#lint_pylint_max-returns
max-returns = 7
