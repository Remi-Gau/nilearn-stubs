from typing import (
    Any,
)

from numpy import (
    memmap,
    ndarray,
)
from pandas.core.frame import DataFrame
from sklearn.utils.estimator_checks import _NotAnArray

def cov_to_corr(covariance: ndarray) -> ndarray: ...
def prec_to_partial(precision: ndarray) -> ndarray: ...
def sym_matrix_to_vec(
    symmetric: ndarray, discard_diagonal: bool = ...
) -> ndarray: ...
def vec_to_sym_matrix(
    vec: ndarray, diagonal: ndarray | None = ...
) -> ndarray: ...

class ConnectivityMeasure:
    def __init__(
        self,
        cov_estimator: Any | None = ...,
        kind: ndarray | float | str | int | list[int] = ...,
        vectorize: Any = ...,
        discard_diagonal: Any = ...,
        standardize: Any = ...,
    ): ...
    def __sklearn_is_fitted__(self) -> bool: ...
    def fit(
        self, X: Any, y: _NotAnArray | ndarray | memmap | None = ...
    ) -> ConnectivityMeasure: ...
    def fit_transform(
        self,
        X: list[ndarray] | ndarray,
        y: ndarray | None = ...,
        confounds: float | ndarray | DataFrame | None = ...,
    ) -> ndarray: ...
    def inverse_transform(
        self, connectivities: ndarray, diagonal: ndarray | None = ...
    ) -> ndarray: ...
    def transform(
        self, X: list[ndarray] | ndarray, confounds: None = ...
    ) -> ndarray: ...
