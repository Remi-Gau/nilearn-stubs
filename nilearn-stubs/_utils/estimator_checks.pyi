from collections.abc import Iterator
from typing import (
    Callable,
)

from sklearn.base import BaseEstimator

from nilearn.maskers.surface_masker import SurfaceMasker

def accept_niimg_input(estimator: BaseEstimator) -> bool: ...
def accept_surf_img_input(estimator: BaseEstimator) -> bool: ...
def check_surface_masker_list_surf_images(estimator: SurfaceMasker) -> None: ...
def get_tag(estimator: BaseEstimator, tag: str) -> bool: ...
def is_glm(estimator: BaseEstimator) -> bool: ...
def is_masker(estimator: BaseEstimator) -> bool: ...
def is_multimasker(estimator: BaseEstimator) -> bool: ...
def nilearn_check_estimator(estimators: list) -> Iterator[tuple[SurfaceMasker, Callable, str]]: ...
def nilearn_check_generator(estimator: BaseEstimator) -> Iterator[tuple[SurfaceMasker, Callable]]: ...
def return_expected_failed_checks(estimator: BaseEstimator) -> dict: ...
def unapplicable_checks() -> dict: ...
