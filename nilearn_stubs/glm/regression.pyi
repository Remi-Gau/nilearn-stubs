from numpy import (
    float64,
    ndarray,
)

class ARModel:
    def __init__(self, design: ndarray, rho: float64 | float | ndarray): ...
    def whiten(self, X: ndarray) -> ndarray: ...

class OLSModel:
    def __init__(self, design: ndarray): ...
    def fit(self, Y: ndarray) -> RegressionResults: ...
    def initialize(self, design: ndarray): ...
    def whiten(self, X: ndarray) -> ndarray: ...

class RegressionResults:
    def __init__(
        self,
        theta: ndarray,
        Y: ndarray,
        model: ARModel | OLSModel,
        whitened_Y: ndarray,
        whitened_residuals: ndarray,
        cov: ndarray | None = ...,
        dispersion: float64 | ndarray = ...,
        nuisance: None = ...,
    ): ...

class SimpleRegressionResults:
    def __init__(self, results: RegressionResults): ...
    def normalized_residuals(self, Y: ndarray, X: ndarray) -> ndarray: ...
    def predicted(self, X: ndarray) -> ndarray: ...
    def residuals(self, Y: ndarray, X: ndarray) -> ndarray: ...
